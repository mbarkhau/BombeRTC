// Generated by CoffeeScript 1.9.2
var app;

app = app || {};

app.menu = {
  init: function() {
    app.menu.model = app.menu.init_model();
    listenOn("body", 'keydown', app.menu._on_menu_keypress);
    return app.menu._set_menu_active('main');
  },
  init_model: function() {
    var _mk_option;
    _mk_option = function(text, action) {
      return {
        text: text,
        action: action,
        active: m.prop(false)
      };
    };
    return {
      'selected_menu': 'main',
      'selected_option_index': 0,
      'menus': {
        'main': [_mk_option("NEW GAME", 'game'), _mk_option("SETTINGS", 'settings'), _mk_option("CREDITS", app.menu.roll_credits)],
        'game': [_mk_option("RANDOM GAME", app.game.start_random_game), _mk_option("NEW PRIVATE GAME", app.game.start_private_game), _mk_option("BACK", 'main')],
        'ingame': [_mk_option("NICK: HANSWURST"), _mk_option("AUDIO: ON"), _mk_option("EXIT", 'main', app.game.exit)],
        'settings': [_mk_option("NICK: HANSWURST"), _mk_option("AUDIO: ON"), _mk_option("BACK", 'main')]
      }
    };
  },
  _set_menu_active: function(menu_id) {
    var cur_menu, cur_opt_idx, model, new_menu;
    model = app.menu.model;
    cur_opt_idx = model.selected_option_index;
    cur_menu = model.menus[model.selected_menu];
    cur_menu[cur_opt_idx].active(false);
    new_menu = model.menus[menu_id];
    model.selected_menu = menu_id;
    cur_opt_idx = Math.min(cur_opt_idx, new_menu.length);
    new_menu[cur_opt_idx].active(true);
    app.menu.rerender();
  },
  _set_option_active: function(menu_id, option_idx) {
    var cur_menu, model;
    model = app.menu.model;
    cur_menu = model.menus[menu_id];
    if (option_idx === model.selected_option_index) {
      return;
    }
    cur_menu[model.selected_option_index].active(false);
    model.selected_option_index = option_idx;
    cur_menu[option_idx].active(true);
    app.menu.rerender();
  },
  _select_option: function(menu_id, option_idx) {
    var cur_menu, option;
    cur_menu = app.menu.model.menus[menu_id];
    option = cur_menu[option_idx];
    if (typeof option.action === 'string') {
      app.menu._set_menu_active(option.action);
    } else if (option.action) {
      option.action();
    }
  },
  _on_select_option: function(menu_id, option_idx) {
    return function(e) {
      app.menu._select_option(menu_id, option_idx);
    };
  },
  _on_focus_option: function(menu_id, option_idx) {
    return function(e) {
      app.menu._set_option_active(menu_id, option_idx);
    };
  },
  _on_menu_keypress: function(e) {
    var cur_menu, keycode, menu_id, option_idx;
    keycode = e.which;
    if (keycode !== 38 && keycode !== 40 && keycode !== 13) {
      return;
    }
    menu_id = app.menu.model.selected_menu;
    option_idx = app.menu.model.selected_option_index;
    switch (keycode) {
      case 38:
        option_idx -= 1;
        break;
      case 40:
        option_idx += 1;
        break;
      case 13:
        app.menu._select_option(menu_id, option_idx);
        return;
    }
    cur_menu = app.menu.model.menus[menu_id];
    option_idx = Math.clamp(option_idx, 0, cur_menu.length - 1);
    app.menu._set_option_active(menu_id, option_idx);
  },
  _mk_option_node: function(menu_id, option_idx, option) {
    var node;
    node = "div.menu-option";
    if (option.active()) {
      node += ".active";
    }
    return m(node, {
      'onclick': app.menu._on_select_option(menu_id, option_idx),
      'onmouseenter': app.menu._on_focus_option(menu_id, option_idx)
    }, option.text);
  },
  _current_options: function() {
    var menu_id, o_idx, option, selected_options;
    menu_id = app.menu.model.selected_menu;
    selected_options = (function() {
      var ref, results;
      ref = app.menu.model.menus[menu_id];
      results = [];
      for (o_idx in ref) {
        option = ref[o_idx];
        results.push(app.menu._mk_option_node(menu_id, o_idx, option));
      }
      return results;
    })();
    return selected_options;
  },
  rerender: function() {
    m.render(byId('app'), app.menu.view());
  },
  view: function() {
    return m("div.menu", {
      onkeypress: app.menu._on_menu_keypress
    }, app.menu._current_options());
  },
  roll_credits: function() {
    return console.log("roll credits");
  }
};
